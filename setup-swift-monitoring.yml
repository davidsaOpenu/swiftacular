---
- name: Setup monitoring on storage and proxy hosts
  hosts: storage,proxy
  roles:
    - role: performancecopilot.metrics.redis
    - role: performancecopilot.metrics.pcp
      vars:
        pcp_rest_api: true
        pcp_pmlogger_interval: 30

- name: Setup storage and proxy hosts so they support custom pcp pdmas
  hosts: storage, proxy
  become: yes
  tasks:
    - name: Install centos-release-openstack-epoxy
      dnf:
        name: centos-release-openstack-epoxy
        state: present

    - name: Install required packages
      dnf:
        name:
          #- python3-pip
          - python3-devel
          - pcp-devel
          - liberasurecode-devel
        state: present

- name: Setup swiftdbinfo pmda on storage hosts
  hosts: storage
  tasks:
    - name: Copy pdma to host
      copy:
        src: monitoring/pdmas/swiftdbinfo/
        dest: /var/lib/pcp/pmdas/swiftdbinfo/
        mode: u=rwx,g=rwx,o=rwx
    - name: change ownership pf pdma
      command: sudo chown $USER /var/lib/pcp/pmdas/swiftdbinfo

    - name: Install OpenStack Epoxy release package
      ansible.builtin.dnf:
        name: centos-release-openstack-epoxy
        state: present

    - name: Enable CRB repository for additional dependencies
      ansible.builtin.command:
        cmd: dnf config-manager --set-enabled crb
      become: yes

    - name: Update package cache after adding repo and enabling CRB
      ansible.builtin.dnf:
        update_cache: yes

    - name: Install required dependencies
      ansible.builtin.dnf:
        name:
          - python3-pyxattr
          - python3-pip
        state: present

    - name: Install OpenStack Swift
      ansible.builtin.dnf:
        name: 
          - openstack-swift
          - python3-swift
        state: present

    - name: Install PDMA
      shell: |
            cd /var/lib/pcp/pmdas/swiftdbinfo
            sudo ./Install.sh
    - name: Enable and configure perssitant logging for custom pdma
      shell: |
            sudo sed -i '/\[access\]/i\
            log mandatory on every 60 seconds {\
            swiftdbinfo.size\
            swiftdbinfo.object.count\
            swiftdbinfo.object.dist\
            }

            ' /var/lib/pcp/config/pmlogger/config.default

- name: Restart pmlogger to finsh PDMAS setup
  hosts: storage, proxy
  tasks:
    - name: Restart pmlogger
      command: sudo systemctl restart pmlogger

- name: Setup Grafana
  hosts: grafana
  roles:
    - role: performancecopilot.metrics.redis
    - role: performancecopilot.metrics.grafana

- name: Add echarts to Grafana
  hosts: grafana
  tasks:
    - name: install echarts
      command: sudo grafana-cli plugins install volkovlabs-echarts-panel
    - name: install echarts
      command: sudo systemctl restart grafana-server

- name: Setup configure grafana python script
  hosts: grafana,storage,proxy
  become: yes
  tasks:
    - name: Install development packages
      dnf:
        name:
          - python3-devel
          # - python3-pip
        state: present

    - name: Create virtual environment for grafana-client
      command: python3 -m venv /opt/grafana-venv
      args:
        creates: /opt/grafana-venv

    - name: Set proper ownership for virtual environment
      file:
        path: /opt/grafana-venv
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        recurse: yes

    - name: Install grafana-client in virtual environment
      pip:
        name: grafana-client
        state: present
        virtualenv: /opt/grafana-venv
        virtualenv_python: python3

    - name: Copy configure_grafana.py script to target hosts
      copy:
        src: monitoring/grafana/configure_grafana.py
        dest: /tmp/configure_grafana.py
        mode: '0755'

- name: Delete PCP Redis datasource to Grafana
  hosts: grafana
  tasks:
    - name: Run the configure_grafana.py script - delete-default-pcp-datasource
      command: >
        /opt/grafana-venv/bin/python /tmp/configure_grafana.py
        delete-default-pcp-datasource
        {{ hostvars['grafana-01']['ansible_default_ipv4']['address'] }}:3000
        admin admin

- name: Add PCP Redis datasource to Grafana
  hosts: storage,proxy
  tasks:
    - name: Run the configure_grafana.py script - create-pcp-datasource
      command: >
        /opt/grafana-venv/bin/python /tmp/configure_grafana.py
        create-pcp-datasource
        {{ hostvars['grafana-01']['ansible_default_ipv4']['address'] }}:3000
        admin admin
        {{ inventory_hostname }}
        {{ ansible_host }}